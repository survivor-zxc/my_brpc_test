// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: test.proto

#ifndef PROTOBUF_INCLUDED_test_2eproto
#define PROTOBUF_INCLUDED_test_2eproto

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3006001
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3006001 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/inlined_string_field.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/service.h>
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)
#define PROTOBUF_INTERNAL_EXPORT_protobuf_test_2eproto 

namespace protobuf_test_2eproto {
// Internal implementation detail -- do not use these members.
struct TableStruct {
  static const ::google::protobuf::internal::ParseTableField entries[];
  static const ::google::protobuf::internal::AuxillaryParseTableField aux[];
  static const ::google::protobuf::internal::ParseTable schema[2];
  static const ::google::protobuf::internal::FieldMetadata field_metadata[];
  static const ::google::protobuf::internal::SerializationTable serialization_table[];
  static const ::google::protobuf::uint32 offsets[];
};
void AddDescriptors();
}  // namespace protobuf_test_2eproto
class TestRequest;
class TestRequestDefaultTypeInternal;
extern TestRequestDefaultTypeInternal _TestRequest_default_instance_;
class TestResponse;
class TestResponseDefaultTypeInternal;
extern TestResponseDefaultTypeInternal _TestResponse_default_instance_;
namespace google {
namespace protobuf {
template<> ::TestRequest* Arena::CreateMaybeMessage<::TestRequest>(Arena*);
template<> ::TestResponse* Arena::CreateMaybeMessage<::TestResponse>(Arena*);
}  // namespace protobuf
}  // namespace google

// ===================================================================

class TestRequest : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:TestRequest) */ {
 public:
  TestRequest();
  virtual ~TestRequest();

  TestRequest(const TestRequest& from);

  inline TestRequest& operator=(const TestRequest& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  TestRequest(TestRequest&& from) noexcept
    : TestRequest() {
    *this = ::std::move(from);
  }

  inline TestRequest& operator=(TestRequest&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const TestRequest& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const TestRequest* internal_default_instance() {
    return reinterpret_cast<const TestRequest*>(
               &_TestRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    0;

  void Swap(TestRequest* other);
  friend void swap(TestRequest& a, TestRequest& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline TestRequest* New() const final {
    return CreateMaybeMessage<TestRequest>(NULL);
  }

  TestRequest* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<TestRequest>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const TestRequest& from);
  void MergeFrom(const TestRequest& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(TestRequest* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 n1 = 1;
  bool has_n1() const;
  void clear_n1();
  static const int kN1FieldNumber = 1;
  ::google::protobuf::int32 n1() const;
  void set_n1(::google::protobuf::int32 value);

  // required int32 n2 = 2;
  bool has_n2() const;
  void clear_n2();
  static const int kN2FieldNumber = 2;
  ::google::protobuf::int32 n2() const;
  void set_n2(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:TestRequest)
 private:
  void set_has_n1();
  void clear_has_n1();
  void set_has_n2();
  void clear_has_n2();

  // helper for ByteSizeLong()
  size_t RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::int32 n1_;
  ::google::protobuf::int32 n2_;
  friend struct ::protobuf_test_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class TestResponse : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:TestResponse) */ {
 public:
  TestResponse();
  virtual ~TestResponse();

  TestResponse(const TestResponse& from);

  inline TestResponse& operator=(const TestResponse& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  TestResponse(TestResponse&& from) noexcept
    : TestResponse() {
    *this = ::std::move(from);
  }

  inline TestResponse& operator=(TestResponse&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const TestResponse& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const TestResponse* internal_default_instance() {
    return reinterpret_cast<const TestResponse*>(
               &_TestResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    1;

  void Swap(TestResponse* other);
  friend void swap(TestResponse& a, TestResponse& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline TestResponse* New() const final {
    return CreateMaybeMessage<TestResponse>(NULL);
  }

  TestResponse* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<TestResponse>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const TestResponse& from);
  void MergeFrom(const TestResponse& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(TestResponse* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 ans = 1;
  bool has_ans() const;
  void clear_ans();
  static const int kAnsFieldNumber = 1;
  ::google::protobuf::int32 ans() const;
  void set_ans(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:TestResponse)
 private:
  void set_has_ans();
  void clear_has_ans();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::int32 ans_;
  friend struct ::protobuf_test_2eproto::TableStruct;
};
// ===================================================================

class TestService_Stub;

class TestService : public ::google::protobuf::Service {
 protected:
  // This class should be treated as an abstract interface.
  inline TestService() {};
 public:
  virtual ~TestService();

  typedef TestService_Stub Stub;

  static const ::google::protobuf::ServiceDescriptor* descriptor();

  virtual void Test(::google::protobuf::RpcController* controller,
                       const ::TestRequest* request,
                       ::TestResponse* response,
                       ::google::protobuf::Closure* done);

  // implements Service ----------------------------------------------

  const ::google::protobuf::ServiceDescriptor* GetDescriptor();
  void CallMethod(const ::google::protobuf::MethodDescriptor* method,
                  ::google::protobuf::RpcController* controller,
                  const ::google::protobuf::Message* request,
                  ::google::protobuf::Message* response,
                  ::google::protobuf::Closure* done);
  const ::google::protobuf::Message& GetRequestPrototype(
    const ::google::protobuf::MethodDescriptor* method) const;
  const ::google::protobuf::Message& GetResponsePrototype(
    const ::google::protobuf::MethodDescriptor* method) const;

 private:
  GOOGLE_DISALLOW_EVIL_CONSTRUCTORS(TestService);
};

class TestService_Stub : public TestService {
 public:
  TestService_Stub(::google::protobuf::RpcChannel* channel);
  TestService_Stub(::google::protobuf::RpcChannel* channel,
                   ::google::protobuf::Service::ChannelOwnership ownership);
  ~TestService_Stub();

  inline ::google::protobuf::RpcChannel* channel() { return channel_; }

  // implements TestService ------------------------------------------

  void Test(::google::protobuf::RpcController* controller,
                       const ::TestRequest* request,
                       ::TestResponse* response,
                       ::google::protobuf::Closure* done);
 private:
  ::google::protobuf::RpcChannel* channel_;
  bool owns_channel_;
  GOOGLE_DISALLOW_EVIL_CONSTRUCTORS(TestService_Stub);
};


// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// TestRequest

// required int32 n1 = 1;
inline bool TestRequest::has_n1() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void TestRequest::set_has_n1() {
  _has_bits_[0] |= 0x00000001u;
}
inline void TestRequest::clear_has_n1() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void TestRequest::clear_n1() {
  n1_ = 0;
  clear_has_n1();
}
inline ::google::protobuf::int32 TestRequest::n1() const {
  // @@protoc_insertion_point(field_get:TestRequest.n1)
  return n1_;
}
inline void TestRequest::set_n1(::google::protobuf::int32 value) {
  set_has_n1();
  n1_ = value;
  // @@protoc_insertion_point(field_set:TestRequest.n1)
}

// required int32 n2 = 2;
inline bool TestRequest::has_n2() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void TestRequest::set_has_n2() {
  _has_bits_[0] |= 0x00000002u;
}
inline void TestRequest::clear_has_n2() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void TestRequest::clear_n2() {
  n2_ = 0;
  clear_has_n2();
}
inline ::google::protobuf::int32 TestRequest::n2() const {
  // @@protoc_insertion_point(field_get:TestRequest.n2)
  return n2_;
}
inline void TestRequest::set_n2(::google::protobuf::int32 value) {
  set_has_n2();
  n2_ = value;
  // @@protoc_insertion_point(field_set:TestRequest.n2)
}

// -------------------------------------------------------------------

// TestResponse

// required int32 ans = 1;
inline bool TestResponse::has_ans() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void TestResponse::set_has_ans() {
  _has_bits_[0] |= 0x00000001u;
}
inline void TestResponse::clear_has_ans() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void TestResponse::clear_ans() {
  ans_ = 0;
  clear_has_ans();
}
inline ::google::protobuf::int32 TestResponse::ans() const {
  // @@protoc_insertion_point(field_get:TestResponse.ans)
  return ans_;
}
inline void TestResponse::set_ans(::google::protobuf::int32 value) {
  set_has_ans();
  ans_ = value;
  // @@protoc_insertion_point(field_set:TestResponse.ans)
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__
// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)


// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_INCLUDED_test_2eproto
